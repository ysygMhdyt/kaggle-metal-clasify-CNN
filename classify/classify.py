{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#导入相应的工具包\n",
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "import pandas as pd \n",
    "import os\n",
    "\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras.optimizers import RMSprop\n",
    "from tensorflow.keras.preprocessing.image import ImageDataGenerator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#训练集和测试集路径\n",
    "train_dir= '/Users/ds/Desktop/Split_Data/train'\n",
    "val_dir= '/Users/ds/Desktop/Split_Data/val'\n",
    "test_dir='/Users/ds/Desktop/Split_Data/test'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 1086 images belonging to 6 classes.\n",
      "Found 360 images belonging to 6 classes.\n"
     ]
    }
   ],
   "source": [
    "#照片总数和类别显示\n",
    "train_datagen = ImageDataGenerator(rescale=1. /255,shear_range=0.2,zoom_range=0.2,horizontal_flip=True)\n",
    "test_datagen = ImageDataGenerator(rescale=1./255)\n",
    "train_generator = train_datagen.flow_from_directory(train_dir,target_size=(200, 200),batch_size=10,class_mode='categorical')\n",
    "validation_generator = test_datagen.flow_from_directory(val_dir,target_size=(200, 200),batch_size=10,class_mode='categorical')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-06-05 13:59:05.226115: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\n",
      "To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d (Conv2D)             (None, 199, 199, 32)      416       \n",
      "                                                                 \n",
      " max_pooling2d (MaxPooling2D  (None, 99, 99, 32)       0         \n",
      " )                                                               \n",
      "                                                                 \n",
      " conv2d_1 (Conv2D)           (None, 98, 98, 64)        8256      \n",
      "                                                                 \n",
      " max_pooling2d_1 (MaxPooling  (None, 49, 49, 64)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_2 (Conv2D)           (None, 48, 48, 128)       32896     \n",
      "                                                                 \n",
      " max_pooling2d_2 (MaxPooling  (None, 24, 24, 128)      0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " flatten (Flatten)           (None, 73728)             0         \n",
      "                                                                 \n",
      " dense (Dense)               (None, 256)               18874624  \n",
      "                                                                 \n",
      " dropout (Dropout)           (None, 256)               0         \n",
      "                                                                 \n",
      " dense_1 (Dense)             (None, 6)                 1542      \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 18,917,734\n",
      "Trainable params: 18,917,734\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "#输入层到输出层的网络结构\n",
    "model = tf.keras.models.Sequential([\n",
    "    tf.keras.layers.Conv2D(32, (2,2), activation='relu', input_shape=(200, 200, 3)),\n",
    "    tf.keras.layers.MaxPooling2D(2, 2),\n",
    "    tf.keras.layers.Conv2D(64, (2,2), activation='relu'),\n",
    "    tf.keras.layers.MaxPooling2D(2,2),\n",
    "    tf.keras.layers.Conv2D(128, (2,2), activation='relu'),\n",
    "    tf.keras.layers.MaxPooling2D(2,2),\n",
    "    tf.keras.layers.Flatten(),\n",
    "    tf.keras.layers.Dense(256, activation='relu'),\n",
    "    tf.keras.layers.Dropout(0.2),\n",
    "    tf.keras.layers.Dense(6, activation='softmax')\n",
    "])\n",
    "\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Compiled!\n"
     ]
    }
   ],
   "source": [
    "#训练时用的优化器、损失函数和准确率评测标准\n",
    "model.compile(loss='categorical_crossentropy',optimizer='rmsprop',metrics=['accuracy'])\n",
    "print('Compiled!')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#精确度限值\n",
    "class myCallback(tf.keras.callbacks.Callback):\n",
    "    def on_epoch_end(self, epoch, logs={}):\n",
    "        if(logs.get('accuracy') > 0.98 ):\n",
    "            print(\"\\nReached 98% accuracy so cancelling training!\")\n",
    "            self.model.stop_training = True "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/20\n",
      "109/109 [==============================] - 37s 331ms/step - loss: 2.2818 - accuracy: 0.2210 - val_loss: 1.8369 - val_accuracy: 0.1694\n",
      "Epoch 2/20\n",
      "109/109 [==============================] - 35s 318ms/step - loss: 1.5140 - accuracy: 0.4079 - val_loss: 1.0865 - val_accuracy: 0.5750\n",
      "Epoch 3/20\n",
      "109/109 [==============================] - 35s 318ms/step - loss: 1.2944 - accuracy: 0.5396 - val_loss: 0.9194 - val_accuracy: 0.6833\n",
      "Epoch 4/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.9409 - accuracy: 0.6519 - val_loss: 3.2012 - val_accuracy: 0.1694\n",
      "Epoch 5/20\n",
      "109/109 [==============================] - 35s 321ms/step - loss: 0.8467 - accuracy: 0.7136 - val_loss: 0.6081 - val_accuracy: 0.8139\n",
      "Epoch 6/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.6752 - accuracy: 0.7772 - val_loss: 0.3465 - val_accuracy: 0.9083\n",
      "Epoch 7/20\n",
      "109/109 [==============================] - 35s 322ms/step - loss: 0.6255 - accuracy: 0.8020 - val_loss: 0.3061 - val_accuracy: 0.9028\n",
      "Epoch 8/20\n",
      "109/109 [==============================] - 39s 359ms/step - loss: 0.4841 - accuracy: 0.8471 - val_loss: 0.7031 - val_accuracy: 0.7306\n",
      "Epoch 9/20\n",
      "109/109 [==============================] - 37s 341ms/step - loss: 0.5278 - accuracy: 0.8481 - val_loss: 0.2928 - val_accuracy: 0.9139\n",
      "Epoch 10/20\n",
      "109/109 [==============================] - 36s 327ms/step - loss: 0.4803 - accuracy: 0.8499 - val_loss: 0.3413 - val_accuracy: 0.9250\n",
      "Epoch 11/20\n",
      "109/109 [==============================] - 35s 322ms/step - loss: 0.3963 - accuracy: 0.8877 - val_loss: 0.3287 - val_accuracy: 0.9333\n",
      "Epoch 12/20\n",
      "109/109 [==============================] - 36s 328ms/step - loss: 0.4059 - accuracy: 0.8803 - val_loss: 0.2585 - val_accuracy: 0.9139\n",
      "Epoch 13/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.4227 - accuracy: 0.8941 - val_loss: 0.3072 - val_accuracy: 0.9361\n",
      "Epoch 14/20\n",
      "109/109 [==============================] - 35s 322ms/step - loss: 0.3288 - accuracy: 0.8950 - val_loss: 0.2595 - val_accuracy: 0.9306\n",
      "Epoch 15/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.3470 - accuracy: 0.8877 - val_loss: 0.5616 - val_accuracy: 0.8361\n",
      "Epoch 16/20\n",
      "109/109 [==============================] - 35s 325ms/step - loss: 0.3544 - accuracy: 0.9033 - val_loss: 0.2079 - val_accuracy: 0.9417\n",
      "Epoch 17/20\n",
      "109/109 [==============================] - 35s 321ms/step - loss: 0.3425 - accuracy: 0.9134 - val_loss: 0.3542 - val_accuracy: 0.9000\n",
      "Epoch 18/20\n",
      "109/109 [==============================] - 35s 322ms/step - loss: 0.3186 - accuracy: 0.9033 - val_loss: 0.2997 - val_accuracy: 0.9250\n",
      "Epoch 19/20\n",
      "109/109 [==============================] - 36s 331ms/step - loss: 0.3101 - accuracy: 0.9079 - val_loss: 0.1780 - val_accuracy: 0.9306\n",
      "Epoch 20/20\n",
      "109/109 [==============================] - 36s 327ms/step - loss: 0.2775 - accuracy: 0.9153 - val_loss: 0.3194 - val_accuracy: 0.9389\n"
     ]
    }
   ],
   "source": [
    "#训练过程\n",
    "callbacks = myCallback()\n",
    "history = model.fit(train_generator,batch_size = 32,epochs=20,validation_data=validation_generator,callbacks=[callbacks],verbose=1, shuffle=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#训练结果可视化\n",
    "import matplotlib.pyplot as plt \n",
    "plt.figure(1)  \n",
    "\n",
    "plt.subplot(211)  \n",
    "plt.plot(history.history['accuracy'])  \n",
    "plt.plot(history.history['val_accuracy'])  \n",
    "plt.title('model accuracy')  \n",
    "plt.ylabel('accuracy')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n",
    "plt.subplot(212)  \n",
    "plt.plot(history.history['loss'])  \n",
    "plt.plot(history.history['val_loss'])  \n",
    "plt.title('model loss')  \n",
    "plt.ylabel('loss')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#精确度限值\n",
    "class myCallback(tf.keras.callbacks.Callback):\n",
    "    def on_epoch_end(self, epoch, logs={}):\n",
    "        if(logs.get('accuracy') > 0.98 ):\n",
    "            print(\"\\nReached 98% accuracy so cancelling training!\")\n",
    "            self.model.stop_training = True "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9046537"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#SGD参数优化\n",
    "import tensorflow as tf\n",
    "opt = tf.keras.optimizers.Adagrad(\n",
    "    learning_rate=0.1, initial_accumulator_value=0.1, epsilon=1e-07)\n",
    "var = tf.Variable(1.0)\n",
    "def loss(): return (var ** 2)/2.0\n",
    "opt.minimize(loss, [var]).numpy()\n",
    "var.numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/20\n",
      "109/109 [==============================] - 35s 318ms/step - loss: 0.2928 - accuracy: 0.9144 - val_loss: 0.3068 - val_accuracy: 0.9167\n",
      "Epoch 2/20\n",
      "109/109 [==============================] - 35s 318ms/step - loss: 0.2962 - accuracy: 0.9061 - val_loss: 0.3235 - val_accuracy: 0.9417\n",
      "Epoch 3/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.2522 - accuracy: 0.9208 - val_loss: 0.5672 - val_accuracy: 0.8861\n",
      "Epoch 4/20\n",
      "109/109 [==============================] - 37s 339ms/step - loss: 0.2802 - accuracy: 0.9190 - val_loss: 0.1851 - val_accuracy: 0.9722\n",
      "Epoch 5/20\n",
      "109/109 [==============================] - 36s 330ms/step - loss: 0.3003 - accuracy: 0.9180 - val_loss: 1.3051 - val_accuracy: 0.8389\n",
      "Epoch 6/20\n",
      "109/109 [==============================] - 35s 320ms/step - loss: 0.2481 - accuracy: 0.9263 - val_loss: 0.1702 - val_accuracy: 0.9639\n",
      "Epoch 7/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.2664 - accuracy: 0.9245 - val_loss: 0.2604 - val_accuracy: 0.9556\n",
      "Epoch 8/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.2877 - accuracy: 0.9236 - val_loss: 0.1498 - val_accuracy: 0.9528\n",
      "Epoch 9/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.2299 - accuracy: 0.9291 - val_loss: 0.2277 - val_accuracy: 0.9278\n",
      "Epoch 10/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.2351 - accuracy: 0.9263 - val_loss: 0.5512 - val_accuracy: 0.8806\n",
      "Epoch 11/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.3136 - accuracy: 0.9208 - val_loss: 0.3204 - val_accuracy: 0.9417\n",
      "Epoch 12/20\n",
      "109/109 [==============================] - 36s 329ms/step - loss: 0.2542 - accuracy: 0.9291 - val_loss: 0.3339 - val_accuracy: 0.9333\n",
      "Epoch 13/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.2587 - accuracy: 0.9309 - val_loss: 0.2675 - val_accuracy: 0.9389\n",
      "Epoch 14/20\n",
      "109/109 [==============================] - 35s 324ms/step - loss: 0.2296 - accuracy: 0.9466 - val_loss: 0.2907 - val_accuracy: 0.9222\n",
      "Epoch 15/20\n",
      "109/109 [==============================] - 35s 325ms/step - loss: 0.3081 - accuracy: 0.9448 - val_loss: 0.4871 - val_accuracy: 0.9222\n",
      "Epoch 16/20\n",
      "109/109 [==============================] - 35s 321ms/step - loss: 0.2125 - accuracy: 0.9438 - val_loss: 0.2411 - val_accuracy: 0.9472\n",
      "Epoch 17/20\n",
      "109/109 [==============================] - 35s 325ms/step - loss: 0.3384 - accuracy: 0.9346 - val_loss: 0.4284 - val_accuracy: 0.8806\n",
      "Epoch 18/20\n",
      "109/109 [==============================] - 35s 321ms/step - loss: 0.2136 - accuracy: 0.9392 - val_loss: 0.7358 - val_accuracy: 0.8778\n",
      "Epoch 19/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.2206 - accuracy: 0.9466 - val_loss: 0.2436 - val_accuracy: 0.9528\n",
      "Epoch 20/20\n",
      "109/109 [==============================] - 36s 325ms/step - loss: 0.2364 - accuracy: 0.9401 - val_loss: 0.3432 - val_accuracy: 0.9444\n"
     ]
    }
   ],
   "source": [
    "#训练过程\n",
    "callbacks = myCallback()\n",
    "history = model.fit(train_generator,batch_size = 32,epochs=20,validation_data=validation_generator,callbacks=[callbacks],verbose=1, shuffle=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#训练结果可视化\n",
    "import matplotlib.pyplot as plt \n",
    "plt.figure(1)  \n",
    "\n",
    "plt.subplot(211)  \n",
    "plt.plot(history.history['accuracy'])  \n",
    "plt.plot(history.history['val_accuracy'])  \n",
    "plt.title('model accuracy')  \n",
    "plt.ylabel('accuracy')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n",
    "plt.subplot(212)  \n",
    "plt.plot(history.history['loss'])  \n",
    "plt.plot(history.history['val_loss'])  \n",
    "plt.title('model loss')  \n",
    "plt.ylabel('loss')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.94279224"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#SGD参数优化\n",
    "import tensorflow as tf\n",
    "opt = tf.keras.optimizers.Adagrad(\n",
    "    learning_rate=0.11, initial_accumulator_value=0.1, epsilon=1e-07)\n",
    "var = tf.Variable(1.0)\n",
    "def loss(): return (var ** 2)/2.0\n",
    "opt.minimize(loss, [var]).numpy()\n",
    "var.numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/20\n",
      "109/109 [==============================] - 37s 335ms/step - loss: 0.2965 - accuracy: 0.9724 - val_loss: 0.4713 - val_accuracy: 0.9444\n",
      "Epoch 2/20\n",
      "109/109 [==============================] - 36s 325ms/step - loss: 0.3779 - accuracy: 0.9669 - val_loss: 0.4442 - val_accuracy: 0.9639\n",
      "Epoch 3/20\n",
      "109/109 [==============================] - 37s 342ms/step - loss: 0.2831 - accuracy: 0.9641 - val_loss: 2.1938 - val_accuracy: 0.8639\n",
      "Epoch 4/20\n",
      "109/109 [==============================] - 39s 353ms/step - loss: 0.3132 - accuracy: 0.9678 - val_loss: 0.8119 - val_accuracy: 0.9361\n",
      "Epoch 5/20\n",
      "109/109 [==============================] - 37s 335ms/step - loss: 0.1699 - accuracy: 0.9687 - val_loss: 0.6074 - val_accuracy: 0.9361\n",
      "Epoch 6/20\n",
      "109/109 [==============================] - 37s 340ms/step - loss: 0.4334 - accuracy: 0.9678 - val_loss: 0.2558 - val_accuracy: 0.9583\n",
      "Epoch 7/20\n",
      "109/109 [==============================] - 37s 341ms/step - loss: 0.1383 - accuracy: 0.9705 - val_loss: 0.7280 - val_accuracy: 0.9361\n",
      "Epoch 8/20\n",
      "109/109 [==============================] - 38s 345ms/step - loss: 0.3980 - accuracy: 0.9669 - val_loss: 0.6692 - val_accuracy: 0.9528\n",
      "Epoch 9/20\n",
      "109/109 [==============================] - 38s 348ms/step - loss: 0.4598 - accuracy: 0.9659 - val_loss: 0.3420 - val_accuracy: 0.9750\n",
      "Epoch 10/20\n",
      "109/109 [==============================] - 38s 348ms/step - loss: 0.3299 - accuracy: 0.9761 - val_loss: 0.1580 - val_accuracy: 0.9833\n",
      "Epoch 11/20\n",
      "109/109 [==============================] - 39s 356ms/step - loss: 0.2143 - accuracy: 0.9696 - val_loss: 0.8081 - val_accuracy: 0.9278\n",
      "Epoch 12/20\n",
      "109/109 [==============================] - 41s 374ms/step - loss: 0.1377 - accuracy: 0.9724 - val_loss: 0.5860 - val_accuracy: 0.9500\n",
      "Epoch 13/20\n",
      "109/109 [==============================] - 40s 369ms/step - loss: 0.2762 - accuracy: 0.9669 - val_loss: 0.4877 - val_accuracy: 0.9667\n",
      "Epoch 14/20\n",
      "109/109 [==============================] - 39s 355ms/step - loss: 0.2685 - accuracy: 0.9715 - val_loss: 0.4892 - val_accuracy: 0.9694\n",
      "Epoch 15/20\n",
      "109/109 [==============================] - ETA: 0s - loss: 0.2182 - accuracy: 0.9816\n",
      "Reached 98% accuracy so cancelling training!\n",
      "109/109 [==============================] - 39s 355ms/step - loss: 0.2182 - accuracy: 0.9816 - val_loss: 0.4868 - val_accuracy: 0.9611\n"
     ]
    }
   ],
   "source": [
    "#训练过程\n",
    "callbacks = myCallback()\n",
    "history = model.fit(train_generator,batch_size = 32,epochs=20,validation_data=validation_generator,callbacks=[callbacks],verbose=1, shuffle=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#训练结果可视化\n",
    "import matplotlib.pyplot as plt \n",
    "plt.figure(1)  \n",
    "\n",
    "plt.subplot(211)  \n",
    "plt.plot(history.history['accuracy'])  \n",
    "plt.plot(history.history['val_accuracy'])  \n",
    "plt.title('model accuracy')  \n",
    "plt.ylabel('accuracy')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n",
    "plt.subplot(212)  \n",
    "plt.plot(history.history['loss'])  \n",
    "plt.plot(history.history['val_loss'])  \n",
    "plt.title('model loss')  \n",
    "plt.ylabel('loss')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.89511913"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#SGD参数优化\n",
    "import tensorflow as tf\n",
    "opt = tf.keras.optimizers.Adagrad(\n",
    "    learning_rate=0.06, initial_accumulator_value=0.1, epsilon=1e-07)\n",
    "var = tf.Variable(1.0)\n",
    "def loss(): return (var ** 2)/2.0\n",
    "opt.minimize(loss, [var]).numpy()\n",
    "var.numpy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/20\n",
      "109/109 [==============================] - 36s 329ms/step - loss: 0.2390 - accuracy: 0.9678 - val_loss: 0.5170 - val_accuracy: 0.9444\n",
      "Epoch 2/20\n",
      "109/109 [==============================] - 35s 323ms/step - loss: 0.2184 - accuracy: 0.9751 - val_loss: 0.2594 - val_accuracy: 0.9778\n",
      "Epoch 3/20\n",
      "109/109 [==============================] - 35s 321ms/step - loss: 0.2448 - accuracy: 0.9715 - val_loss: 0.2810 - val_accuracy: 0.9694\n",
      "Epoch 4/20\n",
      "109/109 [==============================] - 35s 318ms/step - loss: 0.4770 - accuracy: 0.9540 - val_loss: 0.3261 - val_accuracy: 0.9583\n",
      "Epoch 5/20\n",
      "109/109 [==============================] - 37s 336ms/step - loss: 0.1843 - accuracy: 0.9696 - val_loss: 0.3978 - val_accuracy: 0.9444\n",
      "Epoch 6/20\n",
      "109/109 [==============================] - 36s 331ms/step - loss: 0.3441 - accuracy: 0.9715 - val_loss: 0.3715 - val_accuracy: 0.9611\n",
      "Epoch 7/20\n",
      "109/109 [==============================] - 36s 333ms/step - loss: 0.4021 - accuracy: 0.9576 - val_loss: 0.5379 - val_accuracy: 0.9500\n",
      "Epoch 8/20\n",
      "109/109 [==============================] - 37s 338ms/step - loss: 0.1925 - accuracy: 0.9696 - val_loss: 0.3827 - val_accuracy: 0.9694\n",
      "Epoch 9/20\n",
      "109/109 [==============================] - 38s 344ms/step - loss: 0.3680 - accuracy: 0.9586 - val_loss: 0.3660 - val_accuracy: 0.9639\n",
      "Epoch 10/20\n",
      "109/109 [==============================] - 37s 343ms/step - loss: 0.1941 - accuracy: 0.9696 - val_loss: 0.2692 - val_accuracy: 0.9722\n",
      "Epoch 11/20\n",
      "109/109 [==============================] - 37s 342ms/step - loss: 0.4422 - accuracy: 0.9622 - val_loss: 0.4290 - val_accuracy: 0.9611\n",
      "Epoch 12/20\n",
      "109/109 [==============================] - 38s 350ms/step - loss: 0.1835 - accuracy: 0.9678 - val_loss: 0.2891 - val_accuracy: 0.9694\n",
      "Epoch 13/20\n",
      "109/109 [==============================] - 38s 348ms/step - loss: 0.3107 - accuracy: 0.9659 - val_loss: 1.1296 - val_accuracy: 0.9111\n",
      "Epoch 14/20\n",
      "109/109 [==============================] - 38s 349ms/step - loss: 0.2907 - accuracy: 0.9715 - val_loss: 0.3210 - val_accuracy: 0.9694\n",
      "Epoch 15/20\n",
      "109/109 [==============================] - 38s 351ms/step - loss: 0.2781 - accuracy: 0.9622 - val_loss: 0.3363 - val_accuracy: 0.9667\n",
      "Epoch 16/20\n",
      "109/109 [==============================] - 38s 348ms/step - loss: 0.2739 - accuracy: 0.9678 - val_loss: 0.3795 - val_accuracy: 0.9694\n",
      "Epoch 17/20\n",
      "109/109 [==============================] - 38s 352ms/step - loss: 0.2678 - accuracy: 0.9715 - val_loss: 2.8837 - val_accuracy: 0.8500\n",
      "Epoch 18/20\n",
      "109/109 [==============================] - 39s 356ms/step - loss: 0.1325 - accuracy: 0.9761 - val_loss: 0.3566 - val_accuracy: 0.9722\n",
      "Epoch 19/20\n",
      "109/109 [==============================] - 39s 354ms/step - loss: 0.4474 - accuracy: 0.9604 - val_loss: 0.4197 - val_accuracy: 0.9500\n",
      "Epoch 20/20\n",
      "109/109 [==============================] - 39s 355ms/step - loss: 0.3309 - accuracy: 0.9687 - val_loss: 0.5031 - val_accuracy: 0.9556\n"
     ]
    }
   ],
   "source": [
    "#训练过程\n",
    "callbacks = myCallback()\n",
    "history = model.fit(train_generator,batch_size = 32,epochs=20,validation_data=validation_generator,callbacks=[callbacks],verbose=1, shuffle=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#训练结果可视化\n",
    "import matplotlib.pyplot as plt \n",
    "plt.figure(1)  \n",
    "\n",
    "plt.subplot(211)  \n",
    "plt.plot(history.history['accuracy'])  \n",
    "plt.plot(history.history['val_accuracy'])  \n",
    "plt.title('model accuracy')  \n",
    "plt.ylabel('accuracy')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()\n",
    "plt.subplot(212)  \n",
    "plt.plot(history.history['loss'])  \n",
    "plt.plot(history.history['val_loss'])  \n",
    "plt.title('model loss')  \n",
    "plt.ylabel('loss')  \n",
    "plt.xlabel('epoch')  \n",
    "plt.legend(['train', 'test'], loc='upper left')  \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "python(tf)",
   "language": "python",
   "name": "tf"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
